const logger = require('pino')({ level: process.env.LOG_LEVEL || 'info' });

/**
 * Optimized Message Templates - Hindi Only
 * 
 * Features:
 * - Custom Hindi templates only (English removed)
 * - Modular template structure
 * - Dynamic template selection
 * - Template caching for performance
 * - Easy customization
 */
class MessageTemplates {
    constructor() {
        this.templates = {
            // Core Order Templates
            welcome: this.getWelcomeTemplate(),
            order_confirmation: this.getOrderConfirmationTemplate(),
            order_ready: this.getOrderReadyTemplate(),
            delivery_notification: this.getDeliveryNotificationTemplate(),
            
            // Reminder Templates
            pickup_reminder: this.getPickupReminderTemplate(),
            payment_reminder: this.getPaymentReminderTemplate(),
            
            // Fabric Templates
            fabric_welcome: this.getFabricWelcomeTemplate(),
            fabric_purchase: this.getFabricPurchaseTemplate(),
            fabric_payment_reminder: this.getFabricPaymentReminderTemplate(),
            
            // Combined Templates
            combined_order: this.getCombinedOrderTemplate(),
            
            // Special Templates
            pickup_complete: this.getPickupCompleteTemplate(),
            worker_daily_data: this.getWorkerDailyDataTemplate()
        };
        
        // Template cache for performance
        this.templateCache = new Map();
        
        console.log('тЬЕ Optimized Message Templates initialized (Hindi only)');
        console.log(`ЁЯУЭ Loaded ${Object.keys(this.templates).length} template types`);
    }

    // Core Order Templates
    getWelcomeTemplate() {
        return `ЁЯЩП{shop_name} рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ ! рдЖрдкрдХрд╛ рджрд┐рди рд╢реБрдн рд╣реЛ !ЁЯЩП

рдирдорд╕реНрддреЗ *{customer_name}* рдЬреА! ЁЯСЛ

рд╣рдорд╛рд░реЗ рд╕рд╛рде рдЬреБрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП thank you!
рдЖрдкрдХреА рд╣рд░ рдЬрд░реВрд░рдд рдкреВрд░реА рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣рдо рддреИрдпрд╛рд░ рд╣реИрдВ! тЬи

ЁЯПк Shop Information:
- Timings: {business_hours}
- 7 days open
- Contact: {shop_phone}
- WhatsApp updates automatic рдорд┐рд▓рддреЗ рд░рд╣реЗрдВрдЧреЗ !

ЁЯУ▒ рд╣рдорд╛рд░реА Service:
- Order status updates
- Ready рд╣реЛрдиреЗ рдкрд░ instant notification
- Payment reminders
- New collection alerts
- Festival/Wedding Offers ЁЯл┤ 

рдЖрдкрдХрд╛ рд╡рд┐рд╢реНрд╡рд╛рд╕ рд╣реА рд╣рдорд╛рд░реА рд╕рдлрд▓рддрд╛ рд╣реИ! ЁЯЩП

ЁЯТл Best quality, Best Service - guaranteed!

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    getOrderConfirmationTemplate() {
        return `тЬЕ Order Confirm рд╣реЛ рдЧрдпрд╛! тЬЕ

Hello *{customer_name}* рдЬреА ЁЯСЛ

рдЖрдкрдХрд╛ order confirm рд╣реИ рдФрд░ рд╣рдордиреЗ рдХрд╛рдо рд╢реБрд░реВ рдХрд░ рджрд┐рдпрд╛ рд╣реИ! ЁЯОп

ЁЯУЛ Order рдХреА Details:
- Order ID: {order_id}
- Item: {garment_type} ЁЯСФ
- Order Date: {order_date}

ЁЯТ░ Amount Details:
- Total: тВ╣{total_amount}
- Advance рдорд┐рд▓рд╛: тВ╣{advance_amount} тЬЕ
- рдмрд╛рдХреА Amount: тВ╣{remaining_amount}

ЁЯФФ рдЬреИрд╕реЗ рд╣реА ready рд╣реЛрдЧрд╛, рдЖрдкрдХреЛ message рднреЗрдЬ рджреЗрдВрдЧреЗ !
ЁЯПк Shop timing: {business_hours}

рд╣рдорд╛рд░реА рджреБрдХрд╛рди рдкрд░ рдЖрдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж !ЁЯЩП

{shop_name} ЁЯШК
Phone: {shop_phone}

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    getOrderReadyTemplate() {
        return `ЁЯОЙ рдЖрдкрдХрд╛ Order рддреИрдпрд╛рд░ рд╣реИ ! ЁЯОЙ

рдирдорд╕реНрддреЗ *{customer_name}* рдЬреА ЁЯЩП

рдЖрдкрдХрд╛ {garment_type} рдмрд┐рд▓реНрдХреБрд▓ ready рд╣реИ ! тЬи
ЁЯУЛ Order ID: {order_id}
ЁЯУЕ рддреИрдпрд╛рд░ рд╣реБрдЖ: {ready_date}

ЁЯТ░ Payment Details:
- рдХреБрд▓ Amount: тВ╣{total_amount}
- Advance рдЬрдорд╛: тВ╣{advance_amount}
- рдмрд╛рдХреА Amount: тВ╣{remaining_amount}

ЁЯПк Pickup Your Order:
- Shop time: {business_hours}
- рдЖрдЬ рд╣реА рдЖрдХрд░ рд▓реЗ рдЬрд╛рдПрдВ !

{shop_name} ЁЯШК
Phone: {shop_phone}

тнР рдЖрдкрдХрд╛ рднрд░реЛрд╕рд╛ рд╣рдорд╛рд░реЗ рд▓рд┐рдП рд╕рдмрдХреБрдЫ рд╣реИ ! Thank You !

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    getDeliveryNotificationTemplate() {
        return `ЁЯОЙ рдЖрдкрдХрд╛ Order Delivered рд╣реЛ рдЧрдпрд╛! ЁЯОЙ

рдирдорд╕реНрддреЗ *{customer_name}* рдЬреА ЁЯЩП

рдЖрдкрдХрд╛ {garment_type} successfully deliver рд╣реЛ рдЧрдпрд╛! тЬи
ЁЯУЛ Order ID: {order_id}
ЁЯУЕ Delivery Date: {delivery_date}

ЁЯТ░ Payment Summary:
- Total Amount: тВ╣{total_amount}
- Advance рдЬрдорд╛: тВ╣{advance_amount}
- Final Payment: тВ╣{final_payment}
- рдмрдХрд╛рдпрд╛ рд░рд╛рд╢рд┐: тВ╣{remaining_amount}

ЁЯСХ Care Instructions:
- рд╣рд▓реНрдХреЗ рд╣рд╛рде рд╕реЗ Wash рдХрд░реЗрдВ
- рдЙрд▓реНрдЯрд╛ рдХрд░рдХреЗ Iron рдХрд░реЗрдВ
- Dry Clean рднреА рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ

ЁЯТл рдирдпреЗ Order рдХреЗ рд▓рд┐рдП рджреБрдмрд╛рд░рд╛ рдЬрд░реВрд░ рдЖрдП !

Again Thank You 
{shop_name} тЬи
Phone: {shop_phone}

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    // Reminder Templates
    getPickupReminderTemplate() {
        return `ЁЯФФ Pickup Reminder ЁЯФФ

Hello *{customer_name}* рдЬреА ЁЯШК

рдЖрдкрдХрд╛ order ready рд╣реИ! ЁЯОЙ
рдХрдм рд╕реЗ wait рдХрд░ рд░рд╣реЗ рд╣реИрдВ рдЖрдкрдХрд╛...

ЁЯУЛ Order Info:
- ID: {order_id}
- Item: {garment_type}
- Ready since: {ready_date}

ЁЯПк Shop Details:
- Timings: {business_hours}
- Contact: {shop_phone}

ЁЯЪЧ рдЬрд▓реНрджреА рдЖ рдЬрд╛рдЗрдП - waiting рд╣реИ рдЖрдкрдХрд╛!

Thank You - {shop_name} ЁЯШК

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    getPaymentReminderTemplate() {
        return `ЁЯТ│ Payment Reminder ЁЯТ│

рдирдорд╕реНрддреЗ *{customer_name}* рдЬреА ЁЯЩП

рдЖрдкрдиреЗ Order {order_id} ({garment_type}) {order_date} рдХреЛ рд▓реЗ рд▓рд┐рдпрд╛ рдерд╛ред ЁЯОп  

рд▓реЗрдХрд┐рди рдЕрднреА тВ╣{outstanding_amount} рд╢реЗрд╖ рд╣реИ тАФ рдХреГрдкрдпрд╛ рд╕реБрд╡рд┐рдзрд╛ рдЕрдиреБрд╕рд╛рд░ рдЬрд▓реНрдж Payment рдХрд░ рджреАрдЬрд┐рдПред

ЁЯТ░ рднреБрдЧрддрд╛рди рд╡рд┐рдХрд▓реНрдк:
* Cash тАФ рджреБрдХрд╛рди рдкрд░ рдЖрдХрд░ рджреЗ рд╕рдХрддреЗ рд╣реИрдВ  
* UPI/Online тАФ рдиреАрдЪреЗ Pay here рдмрдЯрди рдкрд░ рдХреНрд▓рд┐рдХ рдХрд░реЗрдВ рдпрд╛ рднреБрдЧрддрд╛рди рдХреЗ рдмрд╛рдж PAID рднреЗрдЬ рджреЗрдВ

ЁЯПк Shop timing: {business_hours}
  
{shop_name} тЬи 
Call/WhatsApp: {shop_phone}

рдзрдиреНрдпрд╡рд╛рдж ЁЯЩП

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    // Fabric Templates
    getFabricWelcomeTemplate() {
        return `ЁЯЩП{shop_name} рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ ! рдЖрдкрдХрд╛ рджрд┐рди рд╢реБрдн рд╣реЛ !ЁЯЩП

рдирдорд╕реНрддреЗ *{customer_name}* рдЬреА! ЁЯСЛ

рд╣рдорд╛рд░реЗ рд╕рд╛рде рдЬреБрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП thank you!
рдЖрдкрдХреА рд╣рд░ рдЬрд░реВрд░рдд рдкреВрд░реА рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣рдо рддреИрдпрд╛рд░ рд╣реИрдВ! тЬи

ЁЯПк Shop Information:
- Timings: {business_hours}
- 7 days open
- Contact: {shop_phone}
- WhatsApp updates automatic рдорд┐рд▓рддреЗ рд░рд╣реЗрдВрдЧреЗ !

ЁЯУ▒ рд╣рдорд╛рд░реА Service:
- Order status updates
- Ready рд╣реЛрдиреЗ рдкрд░ instant notification
- Payment reminders
- New collection alerts
- Festival/Wedding Offers ЁЯл┤ 

рдЖрдкрдХрд╛ рд╡рд┐рд╢реНрд╡рд╛рд╕ рд╣реА рд╣рдорд╛рд░реА рд╕рдлрд▓рддрд╛ рд╣реИ! ЁЯЩП

ЁЯТл Best quality, Best Service - guaranteed!

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    getFabricPurchaseTemplate() {
        return `ЁЯОЙ *Fabric Order Ready!* ЁЯОЙ

рдирдорд╕реНрддреЗ *{customer_name}* рдЬреА ЁЯЩП

рдЖрдкрдХреА {fabric_type} ({brand_name}) Fabric Ready рд╣реИ! тЬи
ЁЯУЛ Order ID: {order_id}

ЁЯТ░ *Payment Details:*
- Total Amount: тВ╣{total_amount}

ЁЯПк *Pickup Your Fabric:*
- Shop time: {business_hours}
- рдЖрдЬ рд╣реА рдЖрдХрд░ рд▓реЗ рдЬрд╛рдПрдВ !

{shop_name} ЁЯШК
Phone: {shop_phone}

тнР рдЖрдкрдХрд╛ рднрд░реЛрд╕рд╛ рд╣рдорд╛рд░реЗ рд▓рд┐рдП рд╕рдмрдХреБрдЫ рд╣реИ ! Thank You !

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    getFabricPaymentReminderTemplate() {
        return `ЁЯТ│ *Fabric Payment Reminder* ЁЯТ│

рдирдорд╕реНрддреЗ *{customer_name}* рдЬреА ЁЯЩП

рдЖрдкрдХреА {fabric_type} Fabric Order {order_id} рдХреЗ рд▓рд┐рдП тВ╣{remaining_amount} рд╢реЗрд╖ рд╣реИред

рдХреГрдкрдпрд╛ рд╕реБрд╡рд┐рдзрд╛ рдЕрдиреБрд╕рд╛рд░ рдЬрд▓реНрдж Payment рдХрд░ рджреАрдЬрд┐рдПред

ЁЯТ░ рднреБрдЧрддрд╛рди рд╡рд┐рдХрд▓реНрдк:
* Cash тАФ рджреБрдХрд╛рди рдкрд░ рдЖрдХрд░ рджреЗ рд╕рдХрддреЗ рд╣реИрдВ  
* UPI/Online тАФ рднреБрдЧрддрд╛рди рдХреЗ рдмрд╛рдж PAID рднреЗрдЬ рджреЗрдВ

ЁЯПк Shop timing: {business_hours}
  
{shop_name} тЬи 
Call/WhatsApp: {shop_phone}

рдзрдиреНрдпрд╡рд╛рдж ЁЯЩП

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    // Combined Templates
    getCombinedOrderTemplate() {
        return `ЁЯОЙ *Complete Order Ready!* ЁЯОЙ

рдирдорд╕реНрддреЗ *{customer_name}* рдЬреА ЁЯЩП

рдЖрдкрдХрд╛ Complete Order (Fabric + Tailoring) Ready рд╣реИ! тЬи
ЁЯУЛ Combined Order ID: {order_id}
ЁЯУЕ рддреИрдпрд╛рд░ рд╣реБрдЖ: {ready_date}

ЁЯУж *Order Components:*
- Fabric Order: {fabric_order_id}
- Tailor Order: {tailor_order_id}

ЁЯТ░ *Payment Details:*
- Total Amount: тВ╣{total_amount}
- Advance рдЬрдорд╛: тВ╣{advance_amount}
- рдмрд╛рдХреА Amount: тВ╣{remaining_amount}

ЁЯПк *Pickup Your Complete Order:*
- Shop time: {business_hours}
- рдЖрдЬ рд╣реА рдЖрдХрд░ рд▓реЗ рдЬрд╛рдПрдВ !

{shop_name} ЁЯШК
Phone: {shop_phone}

тнР рдЖрдкрдХрд╛ рднрд░реЛрд╕рд╛ рд╣рдорд╛рд░реЗ рд▓рд┐рдП рд╕рдмрдХреБрдЫ рд╣реИ ! Thank You !

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    // Special Templates
    getPickupCompleteTemplate() {
        return `ЁЯз╛ Order Pickup Complete! ЁЯз╛

Dear *{customer_name}* рдЬреА ЁЯда

рдЖрдЬ ({pickup_date}) рдЖрдкрдиреЗ рдЕрдкрдирд╛ {garment_type} (Order {order_id}) successfully рд▓реЗ рд▓рд┐рдпрд╛! ЁЯОЙ

ЁЯТ│ Payment Summary:
- Total Amount: тВ╣{total_amount}
- рдкрд╣рд▓реЗ рд╕реЗ рдЬрдорд╛: тВ╣{advance_amount}
- рдЖрдЬ рджрд┐рдпрд╛: тВ╣{final_payment}
- рдмрдХрд╛рдпрд╛ рд░рд╛рд╢рд┐: тВ╣{remaining_amount}

ЁЯСХ Care Instructions:
- рд╣рд▓реНрдХреЗ рд╣рд╛рде рд╕реЗ Wash рдХрд░реЗрдВ
- рдЙрд▓реНрдЯрд╛ рдХрд░рдХреЗ Iron рдХрд░реЗрдВ
- Dry Clean рднреА рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ

ЁЯТл рдирдпреЗ Order рдХреЗ рд▓рд┐рдП рджреБрдмрд╛рд░рд╛ рдЬрд░реВрд░ рдЖрдП !

Again Thank You 
{shop_name} тЬи
Phone: {shop_phone}

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    getWorkerDailyDataTemplate() {
        return `ЁЯУК *Daily Work Report* ЁЯУК

рдирдорд╕реНрддреЗ *{worker_name}* рдЬреА ЁЯЩП

рдЖрдЬ ({date}) рдХрд╛ рдЖрдкрдХрд╛ work report:

ЁЯУЛ *Today's Work:*
- Orders Completed: {orders_completed}
- Orders In Progress: {orders_in_progress}
- New Orders: {new_orders}

ЁЯТ░ *Payment Collection:*
- Total Collected: тВ╣{total_collected}
- Advance Received: тВ╣{advance_received}
- Outstanding: тВ╣{outstanding_amount}

ЁЯУИ *Performance:*
- Efficiency: {efficiency}%
- Quality Score: {quality_score}/10

ЁЯПк *Tomorrow's Plan:*
- Priority Orders: {priority_orders}
- Expected Completion: {expected_completion}

Keep up the good work! ЁЯТк

{shop_name} Management
Phone: {shop_phone}

ЁЯПк RS Tailor & Fabric
ЁЯУН Main Market, Kumher`;
    }

    // Template Processing Methods
    getTemplate(templateType) {
        if (!this.templates[templateType]) {
            throw new Error(`Template type '${templateType}' not found`);
        }
        return this.templates[templateType];
    }

    processTemplate(templateType, data) {
        try {
            // Check cache first
            const cacheKey = `${templateType}_${JSON.stringify(data)}`;
            if (this.templateCache.has(cacheKey)) {
                return this.templateCache.get(cacheKey);
            }

            let template = this.getTemplate(templateType);
            
            // Replace placeholders with actual data
            template = this.replacePlaceholders(template, data);
            
            // Cache the processed template
            this.templateCache.set(cacheKey, template);
            
            // Limit cache size
            if (this.templateCache.size > 100) {
                const firstKey = this.templateCache.keys().next().value;
                this.templateCache.delete(firstKey);
            }
            
            return template;
            
        } catch (error) {
            logger.error('Template processing failed:', error);
            throw error;
        }
    }

    replacePlaceholders(template, data) {
        // Default values for missing data
        const defaults = {
            shop_name: 'RS Tailor & Fabric',
            shop_phone: '8824781960',
            business_hours: '10:00 AM - 7:00 PM',
            customer_name: 'Customer',
            order_id: 'N/A',
            garment_type: 'Item',
            total_amount: '0',
            advance_amount: '0',
            remaining_amount: '0',
            ready_date: new Date().toLocaleDateString(),
            delivery_date: new Date().toLocaleDateString(),
            pickup_date: new Date().toLocaleDateString(),
            order_date: new Date().toLocaleDateString(),
            outstanding_amount: '0',
            final_payment: '0',
            fabric_type: 'Fabric',
            brand_name: 'Brand',
            fabric_order_id: 'N/A',
            tailor_order_id: 'N/A',
            worker_name: 'Worker',
            date: new Date().toLocaleDateString(),
            orders_completed: '0',
            orders_in_progress: '0',
            new_orders: '0',
            total_collected: '0',
            advance_received: '0',
            efficiency: '0',
            quality_score: '0',
            priority_orders: '0',
            expected_completion: 'N/A'
        };

        // Merge data with defaults
        const mergedData = { ...defaults, ...data };

        // Replace placeholders
        let processedTemplate = template;
        for (const [key, value] of Object.entries(mergedData)) {
            const placeholder = `{${key}}`;
            processedTemplate = processedTemplate.replace(new RegExp(placeholder, 'g'), value);
        }

        return processedTemplate;
    }

    // Public API Methods (compatible with existing code)
    getWelcomeMessage(orderData) {
        return this.processTemplate('welcome', orderData);
    }

    getOrderConfirmationMessage(orderData) {
        return this.processTemplate('order_confirmation', orderData);
    }

    getOrderReadyMessage(orderData) {
        return this.processTemplate('order_ready', orderData);
    }

    getDeliveryNotificationMessage(orderData) {
        return this.processTemplate('delivery_notification', orderData);
    }

    getPickupReminderMessage(orderData) {
        return this.processTemplate('pickup_reminder', orderData);
    }

    getPaymentReminderMessage(orderData) {
        return this.processTemplate('payment_reminder', orderData);
    }

    getFabricWelcomeMessage(orderData) {
        return this.processTemplate('fabric_welcome', orderData);
    }

    getFabricPurchaseMessage(orderData) {
        return this.processTemplate('fabric_purchase', orderData);
    }

    getFabricPaymentReminderMessage(orderData) {
        return this.processTemplate('fabric_payment_reminder', orderData);
    }

    getCombinedOrderMessage(orderData) {
        return this.processTemplate('combined_order', orderData);
    }

    getPickupCompleteMessage(orderData) {
        return this.processTemplate('pickup_complete', orderData);
    }

    getWorkerDailyDataMessage(workerData) {
        return this.processTemplate('worker_daily_data', workerData);
    }

    // Template Management Methods
    addCustomTemplate(templateType, template) {
        this.templates[templateType] = template;
        console.log(`тЬЕ Custom template added: ${templateType}`);
    }

    updateTemplate(templateType, template) {
        if (!this.templates[templateType]) {
            throw new Error(`Template type '${templateType}' not found`);
        }
        this.templates[templateType] = template;
        this.clearTemplateCache();
        console.log(`тЬЕ Template updated: ${templateType}`);
    }

    removeTemplate(templateType) {
        if (!this.templates[templateType]) {
            throw new Error(`Template type '${templateType}' not found`);
        }
        delete this.templates[templateType];
        this.clearTemplateCache();
        console.log(`тЬЕ Template removed: ${templateType}`);
    }

    clearTemplateCache() {
        this.templateCache.clear();
        console.log('ЁЯз╣ Template cache cleared');
    }

    getAvailableTemplates() {
        return Object.keys(this.templates);
    }

    getTemplateStats() {
        return {
            totalTemplates: Object.keys(this.templates).length,
            cacheSize: this.templateCache.size,
            availableTypes: this.getAvailableTemplates()
        };
    }
}

module.exports = MessageTemplates;